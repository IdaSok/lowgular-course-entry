[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"position": 192
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "L1Gg58Uzmm",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"position": 192
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "L1Gg58Uzmm",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "L1Gg58Uzmm",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 526
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "L83U4KpEhv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 526
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent",
			"parentProperty": "data$"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 449
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "ttE8LkN6qU",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 449
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "ttE8LkN6qU",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "ttE8LkN6qU",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 449
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Sqta9aIuT1",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 449
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Sqta9aIuT1",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Sqta9aIuT1",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 448
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "9B2YlRLOP3",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 448
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "9B2YlRLOP3",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "9B2YlRLOP3",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 538
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "sFA9YHLePs",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 538
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "yyAdeQVxsP",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "mWBmWsvjOc",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "mWBmWsvjOc",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "A5UA6fP6y6",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "faces",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "A5UA6fP6y6",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "faces",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"position": 297
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "kF8ygZ-uE2",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"position": 297
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "kF8ygZ-uE2",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"position": 294
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfQQyM6gBb",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"position": 294
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "FacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "FacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfQQyM6gBb",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfQQyM6gBb",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/faces/faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 323
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfFg0Htf_e",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 323
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfFg0Htf_e",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qfFg0Htf_e",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "8nZpLbD3Hs",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "8nZpLbD3Hs",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "0y1y-6Ye_2",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "0y1y-6Ye_2",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 88
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "doBcGdeLbz",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 88
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "doBcGdeLbz",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "doBcGdeLbz",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 510
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Bx_LFAWqcv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 510
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Bx_LFAWqcv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Bx_LFAWqcv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "-zdLJLaspk",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "-zdLJLaspk",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FmJ5eVUcYp",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 89
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FmJ5eVUcYp",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FmJ5eVUcYp",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 616
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "G3pAtOKleH",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 616
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "G3pAtOKleH",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "G3pAtOKleH",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 514
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Zv2RzY4icj",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 514
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Zv2RzY4icj",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Zv2RzY4icj",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "pRIWsppICQ",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "Person",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "pRIWsppICQ",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "Person",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "Person",
		"suffix": "Model",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "Person",
		"suffix": "Model",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model/person.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "w_iFqKT4Ve",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "w_iFqKT4Ve",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "NbbiEgFtST",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "eVE42Y9sQ4",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "EmployeeForm",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"salary:number": "text",
			"age:number": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "eVE42Y9sQ4",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "EmployeeForm",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"salary:number": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "EmployeeForm",
		"fields": {
			"name:text": "text",
			"salary:number": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "EmployeeForm",
		"fields": {
			"name:text": "text",
			"salary:number": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 437
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "wXcV2hEhn4",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 437
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentProperty": "employeeForm"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentProperty": "employeeForm"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 403
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "taJALXDXjc",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 403
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 399
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Spsstmzg4Q",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 399
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Spsstmzg4Q",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 399
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "iJ9KSgfVtV",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 399
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "iJ9KSgfVtV",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "create",
		"params": {
			"Employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "iJ9KSgfVtV",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "create",
		"params": {
			"Employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"Employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"Employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 461
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "lYhp0q7ID8",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 461
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "lYhp0q7ID8",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 466
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "n37vwQcVT4",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 466
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "rcNDmXd2p0",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "CreateEmployee",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "number",
			"email": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "rcNDmXd2p0",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "CreateEmployee",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "number",
			"email": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "CreateEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "number",
			"email": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "CreateEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "number",
			"email": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model/create-employee.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 803
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "XNq1s1lmNO",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 803
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "XNq1s1lmNO",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "XNq1s1lmNO",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 618
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "QeleQB8zfa",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 618
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "QeleQB8zfa",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "QeleQB8zfa",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 667
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "X0bJLkGmU0",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 667
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 627
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FkSS1R2up7",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 627
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FkSS1R2up7",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 627
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "kYSWO-hjhr",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 627
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "sA_2ekBTiD",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "EmployeeResponse",
		"properties": {
			"id": "string"
		},
		"entityId": "response"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "sA_2ekBTiD",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "EmployeeResponse",
		"properties": {
			"id": "string"
		},
		"entityId": "response"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "EmployeeResponse",
		"suffix": "Response",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services",
		"name": "EmployeeResponse",
		"suffix": "Response",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.response.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 600
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "_M1_I3uCzv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 600
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "_M1_I3uCzv",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts",
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-list/employee-list.component-module.ts",
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 489
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "4VXU5DLi8O",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 489
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 477
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "adRcbZaxiN",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 477
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"label": "onButtonClick()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onButtonClick"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onButtonClick"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "create-employee",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "adRcbZaxiN",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "create-employee",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "create-employee",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts",
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "create-employee",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts",
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FD8_03QsSa",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "home",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "FD8_03QsSa",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "home",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "home",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "home",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
		"position": 291
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qJ6n-cCK8x",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
		"position": 291
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "HomeComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "HomeComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "qJ6n-cCK8x",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/home/home.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 1263
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "U2lKOGw-tk",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 1263
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "layouts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "U2lKOGw-tk",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "section",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "layouts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "section",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for angular-component/templates/add-layout: {
	"action": "angular-component/templates/add-layout",
	"params": {
		"componentHtmlFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 1263,
		"layoutTemplate": "section"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "U2lKOGw-tk",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/add-layout"
}
[info] [CLI] Calling Command angular-component/templates/add-layout: {
	"funcParams": {
		"componentHtmlFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 1263,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/templates/add-layout"
}
[info] [CommandBus]: Dispatching command AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
		"componentTs": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"componentHtml": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"className": "AppComponent",
		"position": 1263,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddLayoutToTemplateCommand"
}
[info] [EventBus]: Broadcasting event TemplateAddedEvent: {
	"type": "TemplateAddedEvent",
	"payload": {
		"componentTs": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event TemplateAddedEvent"
}
[info] [EventBus]: Broadcasted TemplateAddedEvent: {
	"event": {
		"componentTs": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"tokens": {}
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted TemplateAddedEvent"
}
[info] [CommandBus]: Handled  AddLayoutToTemplateCommand: {
	"commandName": "AddLayoutToTemplateCommand",
	"payload": {
		"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
		"componentTs": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.ts",
		"componentHtml": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"className": "AppComponent",
		"position": 1263,
		"layoutTemplate": "section"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddLayoutToTemplateCommand"
}
[info] [CLI] Called Command angular-component/templates/add-layout: {
	"message": "[CLI] Called Command angular-component/templates/add-layout",
	"level": "info"
}
[info] [API] Response ok: angular-component/templates/add-layout: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/add-layout"
}
[info] [CommandBus]: Dispatching command ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ImportTemplateModulesCommand"
}
[info] [CommandBus]: Handled  ImportTemplateModulesCommand: {
	"commandName": "ImportTemplateModulesCommand",
	"payload": {
		"componentModuleFilePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.module.ts"
		],
		"addedTokens": {}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ImportTemplateModulesCommand"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 138
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "6mqIWODBDo",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
		"position": 138
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "AppComponent",
			"options": [
				{
					"type": "forms"
				},
				{
					"type": "lists"
				}
			]
		},
		"children": [
			{
				"actionId": "ADD_TEMPLATE",
				"label": "Display Data",
				"callPath": []
			},
			{
				"actionId": "ADD_LAYOUT",
				"label": "Display Layout",
				"callPath": []
			},
			{
				"actionId": "ADD_COMPONENT",
				"label": "Display Component",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/templates/get: {
	"action": "angular-component/templates/get",
	"params": {
		"name": "layouts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "6mqIWODBDo",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app.component.html",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/templates/get"
}
[info] [API] Response ok: angular-component/templates/get: {
	"result": [
		{
			"label": "section",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[API] Response ok: angular-component/templates/get"
}
[info] [CLI] Calling Query angular-component/templates/get: {
	"funcParams": {
		"name": "layouts"
	},
	"level": "info",
	"message": "[CLI] Calling Query angular-component/templates/get"
}
[info] [CLI] Called Query angular-component/templates/get: {
	"result": [
		{
			"label": "section",
			"contextVariables": []
		}
	],
	"level": "info",
	"message": "[CLI] Called Query angular-component/templates/get"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "u5nrq7UlPi",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employee-details",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "u5nrq7UlPi",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-form",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employee-details",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-details",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employee-details",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 329
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Ur5je8zjr6",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 329
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for routing/add: {
	"action": "routing/add",
	"params": {
		"routeName": "employee-details/:id",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "Ur5je8zjr6",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for routing/add"
}
[info] [CLI] Calling Command routing/add: {
	"funcParams": {
		"routeName": "employee-details/:id",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command routing/add"
}
[info] [CommandBus]: Dispatching command AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-details/:id",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command AddRouteCommand"
}
[info] [CommandBus]: Handled  AddRouteCommand: {
	"commandName": "AddRouteCommand",
	"payload": {
		"routingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
		"routeName": "employee-details/:id",
		"componentFile": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"relatedModulePaths": [
			"C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component-module.ts"
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  AddRouteCommand"
}
[info] [CLI] Called Command routing/add: {
	"message": "[CLI] Called Command routing/add",
	"level": "info"
}
[info] [API] Response ok: routing/add: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts"
	},
	"level": "info",
	"message": "[API] Response ok: routing/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 328
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "memmCItwFJ",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 328
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "memmCItwFJ",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"externalId": "activatedRoute"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "memmCItwFJ",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"externalId": "activatedRoute"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"externalType": "ActivatedRoute",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"externalType": "ActivatedRoute",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "6WsL3u9Ju7",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app",
				"absoluteRootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry",
				"rootRoutingFilePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "EmployeeDetailsParams",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "6WsL3u9Ju7",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "EmployeeDetailsParams",
		"properties": {
			"id": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "EmployeeDetailsParams",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model",
		"name": "EmployeeDetailsParams",
		"suffix": "Model",
		"properties": {
			"id": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/model/employee-details-params.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 437
	},
	"context": {
		"workspace": {
			"rootPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry"
		},
		"userContext": {
			"id": "4mxdwTS-Yx",
			"correlationId": "wqS1fbsqTK",
			"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "C:/Users/falke/Desktop/lowgular/lowgular-course-entry/src/app/ui/employee-details/employee-details.component.ts",
		"position": 437
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeDetailsComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeDetailsComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
